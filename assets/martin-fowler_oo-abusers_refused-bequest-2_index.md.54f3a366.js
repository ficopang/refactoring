import{_ as o,c as t,b as s,d as a,e,w as l,a as p,r,o as i}from"./app.e4ecf616.js";const j=JSON.parse('{"title":"Refused Bequest","description":"","frontmatter":{},"headers":[{"level":2,"title":"Penjelasan Smell","slug":"penjelasan-smell","link":"#penjelasan-smell","children":[]},{"level":2,"title":"Penyelesaian","slug":"penyelesaian","link":"#penyelesaian","children":[]},{"level":2,"title":"Tambahan","slug":"tambahan","link":"#tambahan","children":[]}],"relativePath":"martin-fowler/oo-abusers/refused-bequest-2/index.md"}'),c={name:"martin-fowler/oo-abusers/refused-bequest-2/index.md"},d=p('<h1 id="refused-bequest" tabindex="-1">Refused Bequest <a class="header-anchor" href="#refused-bequest" aria-hidden="true">#</a></h1><p><a href="https://sourcemaking.com/refactoring/smells/refused-bequest" target="_blank" rel="noreferrer">sourcemaking</a></p><h2 id="penjelasan-smell" tabindex="-1">Penjelasan Smell <a class="header-anchor" href="#penjelasan-smell" aria-hidden="true">#</a></h2><p>Refused bequest arti harafiahnya adalah &quot;menolak warisan&quot;. Dalam smell ini, sebuah class turunan tidak memakai seluruh method hasil extendsnya. Hal ini mengarah ke violasi LSP dan/atau ISP.</p>',4),y=s("code",null,"before",-1),D=p(`<div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setWidth</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">float</span><span style="color:#A6ACCD;"> width</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">setHeight</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">width</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setHeight</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">float</span><span style="color:#A6ACCD;"> height</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">height </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">width </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> height</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Karena class Square memiliki invariant width dan height harus sama, maka class Square pun melakukan overriding seperti diatas agar widt hdan height selalu disamakan ketika di-set.</p><p>Dalam kasus ini, penolakan warisan terjadi saat Square melakukan override pada fungsi setter parent-nya.</p>`,3),u=p(`<div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">foo</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Rectangle</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">foo</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Square</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">foo</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Rectangle</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  r</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setHeight</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  r</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWidth</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">assertEquals</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">area</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Fungsi foo memiliki parameter Rectangle. Tentunya, fungsi ini berekspektasi bahwa parameter Rectangle berperilaku sebagaimananya persegi panjang. Bila height = 10, width = 20, maka area 200.</p><p>Sayangnya, unit test tersebut akan failed. Karena ketika <code>foo(new Square());</code>, terjadi:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">expected: &lt;200.00&gt; but was: &lt;400.0&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Fungsi foo mendapatkan area Square adalah 400 karena ketika width di-set 20, height pun turut diubah menjadi 20.</p><h2 id="penyelesaian" tabindex="-1">Penyelesaian <a class="header-anchor" href="#penyelesaian" aria-hidden="true">#</a></h2>`,6),F=s("code",null,"after",-1),A=s("h2",{id:"tambahan",tabindex:"-1"},[a("Tambahan "),s("a",{class:"header-anchor",href:"#tambahan","aria-hidden":"true"},"#")],-1),h=s("p",null,[a("Kasus ini merupakan contoh umum untuk menjelaskan violasi Liskov Subtitution Principle (LSP). Kasus ini dikenal dengan "),s("a",{href:"https://en.wikipedia.org/wiki/Circle%E2%80%93ellipse_problem",target:"_blank",rel:"noreferrer"},"square-rectangle problem"),a(".")],-1),C=s("p",null,"Wajar bila Anda pernah melakukan violasi LSP ketika baru belajar konsep OOP di semester lalu. Square dan Rectangle terkesan memiliki hubungan is-a, namun ternyata tidak boleh karena dalam kasus ini, Square hanya meminjam sebagian behavior dari Rectangle (fungsi area). Sedangkan behavior yang lain, malah ditimpa.",-1);function m(_,k,g,b,f,v){const n=r("github-url");return i(),t("div",null,[d,s("p",null,[a("Perhatikan contoh "),e(n,{to:"before/Square.java"},{default:l(()=>[a("Square.java")]),_:1}),a(" di package "),y,a(".")]),D,s("p",null,[a("Masalah terjadi ketika "),e(n,{to:"before/RectangleTest.java"},{default:l(()=>[a("code ini")]),_:1}),a(" dijalankan:")]),u,s("p",null,[a("ectangle dan Square (dan Triangle) memiliki struktur yang serupa, dilakukan extract class, menjadi abstract class "),e(n,{to:"after/Shape2D.java"},{default:l(()=>[a("Shape2D")]),_:1}),a(". Kemudian semua class lain menjadi subclass dari abstract class ini. Silakan cek code di package "),F,a(".")]),A,h,C])}const T=o(c,[["render",m]]);export{j as __pageData,T as default};
