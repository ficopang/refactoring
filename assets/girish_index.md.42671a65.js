import{_ as a,c as e,o as n,a as l}from"./app.4a9e20fc.js";const i="/assets/all-smell.f5569a7c.png",g=JSON.parse('{"title":"Suryanarayana et al. Code Smells","description":"","frontmatter":{"editLink":true},"headers":[{"level":2,"title":"Penjelasan Smell","slug":"penjelasan-smell","link":"#penjelasan-smell","children":[]}],"relativePath":"girish/index.md"}'),r={name:"girish/index.md"},t=l('<h1 id="suryanarayana-et-al-code-smells" tabindex="-1">Suryanarayana et al. Code Smells <a class="header-anchor" href="#suryanarayana-et-al-code-smells" aria-hidden="true">#</a></h1><p>Untuk pembagian materi, kita menggunakan pengelompokan group smell yang telah dibuat oleh Girish Suryanarayana et al. di bukunya.</p><p><img src="'+i+'" alt="Girish smell groups"></p><p>Semua contoh dalam repository ini dibagi dalam dua package. <code>before</code> dan <code>after</code>. Sesuai dengan namanya, <code>before</code> adalah contoh code yang memiliki code smell yang akan dibahas, <code>after</code> adalah hasil setelah di-refactor.</p><p>Semua test case dalam repository ini menggunakan JUnit 5.</p><h2 id="penjelasan-smell" tabindex="-1">Penjelasan Smell <a class="header-anchor" href="#penjelasan-smell" aria-hidden="true">#</a></h2><ul><li><a href="./abstraction/">Abstraction</a></li><li><a href="./encapsulation/">Encapsulation</a></li><li><a href="./modularization/">Modularization</a></li><li><a href="./hierarchy/">Hierarchy</a></li></ul>',7),s=[t];function o(d,c,h,m,p,u){return n(),e("div",null,s)}const f=a(r,[["render",o]]);export{g as __pageData,f as default};
